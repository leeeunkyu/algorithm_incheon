package algorithm;

import java.util.Scanner;
import java.util.Stack;

public class Main_1012 {
	//배추 흰니렁이 - 해충방지에 효고적-배추 근처에 서식하면서 해충을 잡아먹어준다.
	//배추에 배추흰지렁이가 살고 있으면, 인접한 배추로 이동할 수 있어 그 배추도 해충으로 부터 보호 받을 수 있다. 상하좌우
	//
	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		int testCase = scan.nextInt();
		int m;
		int n;
		int k;
		for (int i = 0; i < testCase; i++) {
			m = scan.nextInt();	//가로 길이
			n = scan.nextInt(); //세로 길이 
			k = scan.nextInt(); //배추 개수
			int arr[][] = new int[n][m];
			boolean c[] = new boolean[n];
			initSetting(arr, k, scan);
			dfs(arr, c, true);
		}
	}

	private static void dfs(int[][] arr, boolean[] c, boolean flag) {
		Stack<Integer> stack = new Stack<Integer>();
		stack.push(0);
		int n = arr.length - 1;
		while(!stack.isEmpty()) {
			int vv = stack.peek();
			for (int i = 0; i < n; i++) {
				if(arr[vv][i] == 1 && !c[i]) {
					stack.push(i);
					c[i] =true;
					flag = true;
					break;
				}
			}
			if(!flag) {
				stack.pop();
			}
		}
	}

	private static void initSetting(int[][] arr, int k, Scanner scan) {
		int x;
		int y;
		for (int i = 0; i < k; i++) {
			//x, y
			x = scan.nextInt();
			y = scan.nextInt();
			arr[y][x] = 1;
		}
	}
}
