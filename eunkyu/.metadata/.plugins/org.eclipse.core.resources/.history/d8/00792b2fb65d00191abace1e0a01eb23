package algorithm;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

//15:20
public class Main_15685_2 {
	
	static int x = 100;
	static int y = 100;
	static int n;
	static Dragon_15685_2[] draons;
	static boolean[][] visited;
	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		n = Integer.parseInt(br.readLine());
		draons = new Dragon_15685_2[n];
		visited = new boolean[y][x];
		for (int i = 0; i < n; i++) {
			String[] str = br.readLine().split(" ");
			draons[i] = 
					new Dragon_15685_2(Integer.parseInt(str[1]),
							Integer.parseInt(str[0]),
							Integer.parseInt(str[2]),
							Integer.parseInt(str[3]));
		}
		
		goGame();
	}
	private static void goGame() {
		for (int i = 0; i < n; i++) {
			Dragon_15685_2 draon = draons[i];
			int y = draon.getY();
			int x = draon.getX();
			int d = draon.getD();
			int g = draon.getG();
			
			for (int j = 0; j < g; j++) {
				
			}
		}
	}
}

class Dragon_15685_2 {
	int y;
	int x;
	int d;
	int g;
	
	public Dragon_15685_2(int y, int x, int d, int g) {
		super();
		this.y = y;
		this.x = x;
		this.d = d;
		this.g = g;
	}
	
	public int getY() {
		return y;
	}
	public void setY(int y) {
		this.y = y;
	}
	public int getX() {
		return x;
	}
	public void setX(int x) {
		this.x = x;
	}
	public int getD() {
		return d;
	}
	public void setD(int d) {
		this.d = d;
	}
	public int getG() {
		return g;
	}
	public void setG(int g) {
		this.g = g;
	}

}