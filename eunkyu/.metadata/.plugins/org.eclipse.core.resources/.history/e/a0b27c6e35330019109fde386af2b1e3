package algorithm;

import java.util.PriorityQueue;

public class Zoom_2 {
	public static void main(String[] args) {
		int N = 3;
		int M = 5;
		int[][] A = new int [N][M];
		new Zoom_2().solution(A, N, M);
	}

	private void solution(int[][] a, int n, int m) {
		PriorityQueue<Pivot> pivot = new PriorityQueue<Pivot>();
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < m; j++) {
				
			}
		}
	}
}

class Pivot implements Comparable<Pivot>{
	int x;	//x좌표 행렬의 열
	int y;  //y좌표 행렬의 행
	int num; //해당 값
	
	public Pivot(int x, int y, int num) {
		super();
		this.x = x;
		this.y = y;
		this.num = num;
	}
	
	public int getX() {
		return x;
	}
	public void setX(int x) {
		this.x = x;
	}
	public int getY() {
		return y;
	}
	public void setY(int y) {
		this.y = y;
	}
	public int getNum() {
		return num;
	}
	public void setNum(int num) {
		this.num = num;
	}

	@Override
	public int compareTo(Pivot pivot) {
		return pivot.getNum() - this.getNum();
	}
	
	
}
