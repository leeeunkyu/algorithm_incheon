package algorithm;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.Queue;

public class Main_2210 {
	
	static final int MAP_SIZE = 5;
	static int[][] arr;
	static int numCnt = 0;
	static HashSet<String> nums;
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		String[] info = br.readLine().split(" ");
	
		arr = new int[MAP_SIZE][MAP_SIZE];
		
		for (int i = 0; i < MAP_SIZE; i++) {
			String[] str = br.readLine().split(" ");
			for (int j = 0; j < MAP_SIZE; j++) {
				arr[i][j] = Integer.parseInt(str[j]);
			}
		}
		
		nums = new HashSet<>();
		dfs("");
	}

	private static void dfs(String str) {
		if(str.length() == 6) {
			numCnt++;
			nums.add(str);
			return;
		}
		int[] dx = {0, 0, 1, -1};
		int[] dy = {1, -1, 0, 0};
	}
}
