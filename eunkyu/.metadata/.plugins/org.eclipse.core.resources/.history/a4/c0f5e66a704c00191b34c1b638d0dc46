package algorithm;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
//3:50
public class Main_2629 {
	
	static int n;
	static int m;
	static int[] stone;
	static int[] ball;
	static int a;
	static int b;
	
	
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		n = Integer.parseInt(br.readLine());
		stone = new int[n];
		
		String[] str = br.readLine().split(" ");
		for (int i = 0; i < n; i++) {
			stone[i] = Integer.parseInt(str[i]);
		}
		
		m = Integer.parseInt(br.readLine());
		String[] info = br.readLine().split(" ");
		for (int i = 0; i < m; i++) {
			ball[i] = Integer.parseInt(info[i]);
		}
		
		for (int i = 0; i < m; i++) {
			a = ball[i];
			b = 0;
			dfs(0);
		}
	
	}

	private static void dfs(int idx) {
		if(idx == n) {
			if(a == b) {
				
			}
		}
		
		for (int i = idx; i < n; i++) {
			//ball + Ãß... == Ãß...
			a += stone[idx];
			dfs(idx + 1);
			a -= stone[idx];
			b += stone[idx];
			dfs(idx + 1);
			b -= stone[idx];
		}
	}
}
