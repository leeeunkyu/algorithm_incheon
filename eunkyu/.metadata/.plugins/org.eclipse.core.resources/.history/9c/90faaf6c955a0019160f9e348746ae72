package algorithm;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main_17070 {
	
	static int n;
	static int[][] arr;
	static int res;
	
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		n = Integer.parseInt(br.readLine());
		arr = new int[n][n];
		
		for (int i = 0; i < args.length; i++) {
			String[] str = br.readLine().split(" ");
			for (int j = 0; j < args.length; j++) {
				arr[i][j] = Integer.parseInt(str[j]);
			}
		}
		
		dfs(0, 1, 0);
		System.out.println(res);
	}

	private static void dfs(int y, int x, int dir) {
		if(y == n - 1 && x == n - 1) {
			++res;
			return;
		}
		if(arr[y][x + 1] != 1) {
			dfs(y, x + 1, 0);	
		}
		if(arr[y + 1][x] != 1) {
			dfs(y + 1, x, 1);	
		}
		if(arr[y + 1][x + 1] != 1) {
			dfs(y + 1, x + 1, 2);	
		}
	}
}
