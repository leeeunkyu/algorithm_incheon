package algorithm;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main_7562 {
	static int l;	//체스판 크기
	static int arr[][];
	static StringBuilder sb = new StringBuilder();

	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int testCase = Integer.parseInt(br.readLine());
		for (int i = 0; i < testCase; i++) {
			l = Integer.parseInt(br.readLine());
			arr = new int[l][l];
			
			String str[] = br.readLine().split(" ");
			int x = Integer.parseInt(str[0]);
			int y = Integer.parseInt(str[1]);
			arr[y][x] = 1;	//나이트 현재 위치
			
			str = br.readLine().split(" ");
			int x2 = Integer.parseInt(str[0]);
			int y2 = Integer.parseInt(str[1]);
			arr[y2][x2] = -1; //나이트가 이동해야할 위치
			sb.append(bfs(x, y) + "\n");
			sb.append("-------------------------------------");
		}
		System.out.println(sb);
	}
	private static int bfs(int x, int y) {
		int dx[] = {1, 2, 2, 1, -1, -2, -2, -1};
		int dy[] = {-2, -1, 1, 2, 2, 1, -1, -2};
		int min = 300 * 300;
		for (int i = 0; i < 8; i++) {
			int nextX = x + dx[i];
			int nextY = y + dy[i];
			sb.append("nextX: "+nextX+"   nextY: "+nextY+"\n");
			if(nextX >= 0 && nextX < l && nextY >= 0 && nextY < l &&arr[nextY][nextX] == -1) {
				System.out.println("??");
				min = Math.min(min, bfs(nextX, nextY));
			}
		}
		return min;
	}
}
