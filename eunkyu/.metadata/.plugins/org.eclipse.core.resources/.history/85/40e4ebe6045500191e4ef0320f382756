package algorithm;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.LinkedList;
import java.util.Queue;

//14:00 ~
public class Main_14502_2 {
	
	static int n;	//세로
	static int m;	//가로
	static int[][] arr;
	static Point_14502_2[] map;
	static Queue<Point_14502_2[]> pointq;
	
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		String[] str = br.readLine().split(" ");
		n = Integer.parseInt(str[0]);
		m = Integer.parseInt(str[1]);
		arr = new int[n][m];
		map = new Point_14502_2[n * m];
		int cnt = 0;
		for (int i = 0; i < n; i++) {
			String[] info = br.readLine().split(" ");
			for (int j = 0; j < m; j++) {
				int val = Integer.parseInt(info[j]);
				arr[i][j] = val;
				if(val == 0) {
					map[cnt] = new Point_14502_2(i, j);
					++cnt;
				}
			}
		}
		
		pointq = new LinkedList<Point_14502_2[]>();
	
	}
}


class Point_14502_2 {
	int y;
	int x;
	
	public Point_14502_2(int y, int x) {
		super();
		this.y = y;
		this.x = x;
	}
	
	public int getY() {
		return y;
	}
	public void setY(int y) {
		this.y = y;
	}
	public int getX() {
		return x;
	}
	public void setX(int x) {
		this.x = x;
	}
}