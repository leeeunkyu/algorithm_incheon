package algorithm;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.LinkedList;
import java.util.Queue;

public class Main_2661 {
	//숫자는 1,2,3 세개로만 이루어져있음
	//나쁜 수열은 수열이 반복될경우 ex) 123123213 
	static int arr[];
	static int n;
	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		n = Integer.parseInt(br.readLine());
		arr = new int[n];
		dfs(0);
	}

	private static void dfs(int idx) {
		int sample[] = {1, 2, 3};
		int length = n - 1;
		
		for (int i = 0; i < sample.length; i++) {
			arr[idx] = sample[i];
			if(arr.length == length) {
				check();
					
					
			}
			
			dfs(++idx);			
		}
	}

	private static boolean check() {
		Queue<Integer> q1 = new LinkedList<>();
		Queue<Integer> q2 = new LinkedList<>();
		int temp[] = new int[3];
		//1 2 3
		for (int j = 0; j < arr.length; j++) {
			q1.add(arr[j]);
			q2.add(arr[j]);
		}
		
		while(!q1.isEmpty()) {
			for (int i = 0; i < temp.length; i++) {
				temp[i] = q1.poll();
				if(temp[i] == q1.peek())
					return false;
			}
			
			for (int i = 0; i < temp.length; i++) {
				if(temp[i] == q2.poll())
					return false;
			}
			
		}
	}
}
