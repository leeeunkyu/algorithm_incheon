package algorithm;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.LinkedList;
import java.util.Queue;

public class Main_3190 {
	static int n;
	static int k;
	static int l;
	
	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		n = Integer.parseInt(br.readLine());
		k = Integer.parseInt(br.readLine());
		
		int[][] arr = new int[n][n];
		//Apple_3190[] apples = new Apple_3190[2];
		
		for (int i = 0; i < k; i++) {
			String[] str = br.readLine().split(" "); //0이 행 1 이열
			arr[Integer.parseInt(str[0])][Integer.parseInt(str[1])] = 1; //1이면 사과
		}
		
		Queue<Order_3190> orders = new LinkedList<Order_3190>();
		for (int i = 0; i < l; i++) {
			String[] str = br.readLine().split(" "); //0이 행 1 이열
			Order_3190 order_3190 = new Order_3190(Integer.parseInt(str[0]), str[1].charAt(0));
			orders.add(order_3190);
		}		
		goSnake(arr , orders);
	}

	private static void goSnake(int[][] arr, Queue<Order_3190> orders) {
		
	}
}

class Apple_3190 {
	int x;
	int y;
	
	public Apple_3190(int x, int y) {
		super();
		this.x = x;
		this.y = y;
	}
	
	public int getX() {
		return x;
	}
	public void setX(int x) {
		this.x = x;
	}
	public int getY() {
		return y;
	}
	public void setY(int y) {
		this.y = y;
	}
}

class Order_3190 {
	int step;
	char dir;
	
	public Order_3190(int step, char dir) {
		super();
		this.step = step;
		this.dir = dir;
	}
	
	public int getStep() {
		return step;
	}
	public void setStep(int step) {
		this.step = step;
	}
	public char getDir() {
		return dir;
	}
	public void setDir(char dir) {
		this.dir = dir;
	}
}
