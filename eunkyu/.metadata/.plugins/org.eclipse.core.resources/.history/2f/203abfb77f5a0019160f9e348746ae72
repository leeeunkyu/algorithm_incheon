package algorithm;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main_3109 {
	
	static int r; //세로
	static int c; //가로
	static char[][] arr;
	static boolean[][] visited;
	static int res;
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		String[] str = br.readLine().split(" ");
		r = Integer.parseInt(str[0]);
		c = Integer.parseInt(str[1]);
		arr = new char[r][c];
		
		for (int i = 0; i < r; i++) {
			String info = br.readLine();
			for (int j = 0; j < c; j++) {
				char val = info.charAt(j);
				arr[i][j] = val;
			}
		}
		
		for (int i = 0; i < r; i++) {
			for (int j = 0; j < c; j++) {
				System.out.print(arr[i][j]+" ");
			}
			System.out.println();
		}
		
		visited = new boolean[r][c];
		int ans = 0;
		for (int i = 0; i < r; i++) {
			res = 0;
			go(i, 0);
			if(ans < res)
				ans = res;
		}
		System.out.println(ans);
		
	}
	private static void go(int y, int x) {
		if(x == c - 1) {
			++res;
		} else {
			if(!visited[y][x + 1] && arr[y][x] != 'x') {
				visited[y][x + 1] = true;
				go(y, x + 1);
			}
			if(y - 1 >= 0 && !visited[y - 1][x + 1] && arr[y - 1][x] != 'x')
				visited[y - 1][x + 1] = true;
				go(y - 1, x + 1);
			if(y + 1 < r && !visited[y + 1][x + 1] && arr[y + 1][x] != 'x')
				visited[y + 1][x + 1] = true;
				go(y + 1, x);
		}
	}
}
