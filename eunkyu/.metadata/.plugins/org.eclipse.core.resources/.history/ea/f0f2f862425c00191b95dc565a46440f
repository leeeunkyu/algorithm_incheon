package algorithm;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main_7576 {
	
	static int n;
	static int m;
	static int[][] arr;
	static boolean[][] visited;
	static int zeroVal;
	//정수 1은 익은 토마토, 정수 0은 익지 않은 토마토, 정수 -1은 토마토가 들어있지 않은 칸을 나타낸다. 
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		String[] str = br.readLine().split(" ");
		m = Integer.parseInt(str[0]);
		n = Integer.parseInt(str[1]);
		arr = new int[n][m];
		visited = new boolean[n][m];
		int cnt = 0;
		for (int i = 0; i < n; i++) {
			String[] info = br.readLine().split(" ");
			for (int j = 0; j < m; j++) {
				int val = Integer.parseInt(info[j]);
				arr[i][j] = val;
				if(val == 0)
					cnt++;
			}
		}
		if(cnt == 0) {
			System.out.println(0);
			return;
		}
		zeroVal = Integer.MAX_VALUE;
		int res = 0;
		while(check()) {
			goGame();
			print();
			++res;
		}
		if(zeroVal == -1)
			System.out.println(-1);
		else
			System.out.println(res);
		
		
	}
	private static void print() {
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < m; j++) {
				System.out.print(arr[i][j]+" ");
			}
			System.out.println();
		}
		System.out.println();
	}
	private static boolean check() {
		int zero = 0;
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < m; j++) {
				if(arr[i][j] == 0) {
					zero++;
				}
			}
		}
	
		if(zeroVal == zero) {
			zeroVal = -1;
			return false;
		}
		else if(zeroVal != zero) {
			zeroVal = zero;
		}
		if(zero > 0) {
			return true;
		}
		return false;
	}
	private static void goGame() {
		int[] dx = {0, 0, 1, -1};
		int[] dy = {1, -1, 0, 0};
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < m; j++) {
				if(arr[i][j] == 1) {
					visited[i][j] = true;
					for (int dir = 0; dir < 4; dir++) {
						int nextX = j + dx[dir];
						int nextY = i + dy[dir];
						if(nextX >= 0 && nextX < m && nextY >= 0 && nextY < n) {
							if(arr[nextY][nextX] == 0) {
								arr[nextY][nextX] = 2;
							}
						}
					}
				}
			}
		}

		for (int i = 0; i < n; i++) {
			for (int j = 0; j < m; j++) {
				if(arr[i][j] == 2) {
					arr[i][j] = 1;
/*					visited[i][j] = true;
*/				}
			}
		}

	}
}
