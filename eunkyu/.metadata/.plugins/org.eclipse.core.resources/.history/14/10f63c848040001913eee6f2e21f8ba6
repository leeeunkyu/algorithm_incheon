package algorithm_review;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.LinkedList;
import java.util.Queue;

public class Main_14501 {
	
	static int n;
	static int m;
	static int[][] arr;
	
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		String[] info = br.readLine().split(" ");
		n = Integer.parseInt(info[0]);
		m = Integer.parseInt(info[1]);
		
		arr = new int[n][n];
		Queue<Chicken_14501> chickenq =  new LinkedList<Chicken_14501>();
		
		for (int i = 0; i < n; i++) {
			String[] arrInfo = br.readLine().split(" ");
			for (int j = 0; j < n; j++) {
				int val = Integer.parseInt(arrInfo[j]);
				arr[i][j] = val;
				if(val == 2) {
					chickenq.add(new Chicken_14501(i, j, 0));
				}
			}
		}
		
		
	}
}

class Chicken_14501 {
	int y;
	int x;
	int cnt;
	
	public Chicken_14501(int y, int x, int cnt) {
		super();
		this.y = y;
		this.x = x;
		this.cnt = cnt;
	}
	
	public int getY() {
		return y;
	}
	public void setY(int y) {
		this.y = y;
	}
	public int getX() {
		return x;
	}
	public void setX(int x) {
		this.x = x;
	}
	public int getCnt() {
		return cnt;
	}
	public void setCnt(int cnt) {
		this.cnt = cnt;
	}
}
