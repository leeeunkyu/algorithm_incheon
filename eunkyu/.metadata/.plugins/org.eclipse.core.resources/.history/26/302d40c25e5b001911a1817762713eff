package algorithm;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

//15:30
public class Main_15684 {
	
	static int n;
	static int m;
	static int h;
	static int[][] arr;
	static int height;
	static int width;
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		String[] str = br.readLine().split(" ");
		n = Integer.parseInt(str[0]);
		m = Integer.parseInt(str[1]);
		h = Integer.parseInt(str[2]);
		height = h + 2;
		width = n + n - 1;
		arr = new int[height][width];
		
		for (int i = 0; i < height; i++) {
			for (int j = 0; j < width; j++) {
				if(j % 2 == 0)
					arr[i][j] = 1;
			}
		}
		
		
		for (int i = 0; i < m; i++) {
			String[] info = br.readLine().split(" ");
			int a = Integer.parseInt(info[0]);
			int b = Integer.parseInt(info[1]);
			arr[a][2 * b - 1] = 1;
			//a 2 b 5
		}
		
		print();
		int ans = -1;
		for (int i = 1; i <= 3; i++) {
			boolean res = goGame(i, 0);
			if(res) {
				ans = i;
				break;
			}
		}
		System.err.println(ans);
		
	}
	private static boolean isGoal() {
		for (int x = 0; x < width; x++) {
			if(x % 2 != 0) continue;
			int temp = x;
			for (int y = 0; y < height; y++) {
				if(temp - 1 >= 0 && arr[y][temp - 1] == 1) {
					temp = temp - 2;
					continue;
				}
				if(temp + 1 < width && arr[y][temp + 1] == 1)
					temp = temp + 2;
			}
			if(temp != x)
				return false;
		}
		return true;
	}
	private static boolean goGame(int cnt, int rCnt) {
		if(cnt == rCnt) {
			if(isGoal()) {
				return true;
			}
			return false;
		}
		for (int i = 0; i < height; i++) {
			for (int j = 0; j < width; j++) {
				
			}
		}
		return false;
		
	}
	private static void print() {
		for (int i = 0; i < height; i++) {
			for (int j = 0; j < width; j++) {
				System.out.print(arr[i][j]+" ");
			}
			System.out.println();
		}
	}
}