package algorithm;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Stack;

public class Main_1260 {
	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		int n = Integer.parseInt(br.readLine());
		int m = Integer.parseInt(br.readLine());
		int v = Integer.parseInt(br.readLine());

		// 양방향 그래프, 가중치 x

		int[][] a = new int[n + 1][n + 1];

		boolean[] c = new boolean[n + 1];

		for (int i = 0; i < m; i++) {
			int v1 = Integer.parseInt(br.readLine());
			int v2 = Integer.parseInt(br.readLine());

			a[v1][v2] = 1;
			a[v2][v1] = 1;
		}

		// dfs(a,c,v);
		dfs(a, c, v, true);
		System.out.println();
	}
	
	public static void dfs(int[][] a, boolean[] c, int v, boolean flag) {
		Stack<Integer> stack = new Stack<Integer>();
		int n = a.length - 1;
		
		stack.push(v);
		c[v] = true;
		System.out.println(v+" ");
		
		while(!stack.isEmpty()) {
			int vv = stack.peek();
			
			flag = false;
			
			for (int i = 1; i <= n; i++) {
				if(a[vv][i] == 1 && !c[i]) {
					stack.push(i);
					System.out.println(i+" ");
				
					c[i] = true;
					flag = true;
					break;
				}
				
			}
			
			if(!flag) {
				stack.pop();
			}
			
		}
	}
}
