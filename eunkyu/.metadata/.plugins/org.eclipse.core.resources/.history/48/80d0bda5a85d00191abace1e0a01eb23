package algorithm;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main_16939 {
	
	static int[][] arr = {{0, 0, 1, 2, 0, 0, 0, 0},
			{0, 0, 3, 4, 0, 0, 0, 0},
			{13, 14, 5, 6, 17, 18, 21, 22},
			{15, 16, 7, 8, 19, 20, 23, 24},
			{0, 0, 9, 10, 0, 0, 0, 0},
			{0, 0, 11, 12, 0, 0, 0, 0}};
	static int[][] map;
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		String[] str = br.readLine().split(" ");
		map = new int[6][8];
		int temp = 1;
		loop:
		for (int v = 0; v < 24; v++) {
			int val = Integer.parseInt(str[v]);
			for (int i = 0; i < 6; i++) {
				for (int j = 0; j < 8; j++) {
					if(arr[i][j] == temp) {
						System.out.println(i+"  "+j);
						System.out.println(val);
						map[i][j] = val;
						temp++;
						continue loop;
					}
				}
			}
		}
		print();
		goGame();
	}
	private static void goGame() {
		check();
	}
	private static boolean check() {
		if(map[0][2] != map[0][3] || map[0][2] != map[1][2] || map[0][2] != map[1][3]) {
			return false;
		}
		if(map[2][0] != map[2][1] || map[2][0] != map[3][0] || map[2][0] != map[3][1]) {
			return false;
		}
		if(map[2][2] != map[2][3] || map[2][2] != map[3][2] || map[2][2] != map[3][3]) {
			return false;
		}
		if(map[2][4] != map[2][5] || map[2][4] != map[3][4] || map[2][4] != map[3][5]) {
			return false;
		}
		if(map[2][6] != map[2][7] || map[2][6] != map[3][6] || map[2][6] != map[3][7]) {
			return false;
		}
		if(map[4][2] != map[4][3] || map[4][2] != map[5][2] || map[4][2] != map[5][3]) {
			return false;
		}
		return true;
		
	}
	private static void print() {
		System.out.println();
		for (int i = 0; i < 6; i++) {
			for (int j = 0; j < 8; j++) {
				System.out.print(map[i][j]+" ");
			}
			System.out.println();
		}
	}
}
