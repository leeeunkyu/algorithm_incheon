package algorithm;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main_11559 {
	
	static final int HEIGHT = 12;
	static final int WEIDTH = 6;
	static char[][] map;
	static boolean[][] visited;
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		map = new char[HEIGHT][WEIDTH];
		for (int i = 0; i < HEIGHT; i++) {
			char[] temp = br.readLine().toCharArray();
			map[i] = temp;
		}
		
		for (int i = 0; i < HEIGHT; i++) {
			for (int j = 0; j < WEIDTH; j++) {
				System.out.print(map[i][j]+" ");
			}
			System.out.println();
		}
		visited = new boolean[HEIGHT][WEIDTH];
		char[] word = {'R', 'G', 'B', 'P', 'Y'};
		
		boom();
	}

	private static void boom() {
		//가장 밑을 보자.
		for (int i = 0; i < HEIGHT; i++) {
			for (int j = 0; j < WEIDTH; j++) {
				if(map[i][j] != '.' && !visited[i][j]) {
					visited[i][j] = true;
					bfs(i, j);
				}
			}
		}
	}

	private static void bfs(int y, int x) {
		
	}
}

class Point_11559 {
	int y;
	int x;
	
	public Point_11559(int y, int x) {
		super();
		this.y = y;
		this.x = x;
	}
	
	public int getY() {
		return y;
	}
	public void setY(int y) {
		this.y = y;
	}
	public int getX() {
		return x;
	}
	public void setX(int x) {
		this.x = x;
	}
}
