package algorithm;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.PriorityQueue;
import java.util.Queue;

public class Main_15661 {
	
	static int n;	//사람 수
	
	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		n = Integer.parseInt(br.readLine());
		
		int[][] arr = new int[n][n];
		
		for (int i = 0; i < n; i++) {
			String[] arrInfo = br.readLine().split(" ");
			for (int j = 0; j < n; j++) {
				arr[i][j] = Integer.parseInt(arrInfo[j]);
			}
		}
		
		goGame(arr);
		
		
	}

	//팀 인원수는 1보다 크기만 하면된다.
	//능력치 차이가 최소가 되면 된다.
	
	private static void goGame(int[][] arr) {
		//i, j 의 능력치 합 = arr[i][j] + arr[j][i];
		//1
		PriorityQueue<Team_15661> teams = new PriorityQueue<Team_15661>();
		for (int i = 0; i < n; i++) {
			for (int j = i + 1; j < n; j++) {
				int val = arr[i][j] + arr[j][i];
				teams.add(new Team_15661(i, j, val));
			}
		}
	}
}


class Team_15661 {
	int a;
	int b;
	int score;
	
	public Team_15661(int a, int b, int score) {
		super();
		this.a = a;
		this.b = b;
		this.score = score;
	}
	
	public int getA() {
		return a;
	}
	public void setA(int a) {
		this.a = a;
	}
	public int getB() {
		return b;
	}
	public void setB(int b) {
		this.b = b;
	}
	public int getScore() {
		return score;
	}
	public void setScore(int score) {
		this.score = score;
	}
	
}
