package algorithm;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.HashSet;

public class Main_1339 {
	
	static int n;
	static String[] words;
	static HashSet<Character> hs;
	static double[] map;
	static Point_1339[] map2;
	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		n = Integer.parseInt(br.readLine());
		words = new String[n];
		hs = new HashSet<Character>();
		
		for (int i = 0; i < n; i++) {
			words[i] = br.readLine();
		}
		map = new double[26];
		map2 = new Point_1339[26];
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < words[i].length(); j++) {
				map[words[i].charAt(j) - 'A'] += Math.pow(10, words[i].length() - j);
				
			}
		}
				
		for (int i = 0; i < 26; i++) {
			System.out.print(map[i]+" ");
		}
		System.out.println();
		
		
	}
}

class Point_1339 {
	double val;
	char c;
	
	public Point_1339(double val, char c) {
		super();
		this.val = val;
		this.c = c;
	}
	
	public double getVal() {
		return val;
	}
	public void setVal(double val) {
		this.val = val;
	}
	public char getC() {
		return c;
	}
	public void setC(char c) {
		this.c = c;
	}
	}