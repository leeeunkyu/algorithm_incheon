package algorithm;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main_16939 {
	
	static int[][] arr = {{0, 0, 1, 2, 0, 0, 0, 0},
			{0, 0, 3, 4, 0, 0, 0, 0},
			{13, 14, 5, 6, 17, 18, 21, 22},
			{15, 16, 7, 8, 19, 20, 23, 24},
			{0, 0, 9, 10, 0, 0, 0, 0},
			{0, 0, 11, 12, 0, 0, 0, 0}};
	static int[][] map;
	
	static int w = 8;
	static int h = 6;
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		String[] str = br.readLine().split(" ");
		map = new int[6][8];
		int temp = 1;
		loop:
		for (int v = 0; v < 24; v++) {
			int val = Integer.parseInt(str[v]);
			for (int i = 0; i < h; i++) {
				for (int j = 0; j < w; j++) {
					if(arr[i][j] == temp) {
						map[i][j] = val;
						temp++;
						continue loop;
					}
				}
			}
		}
		print();
		if(goGame()) {
			System.out.println(1);
		} else{
			System.out.println(0);
		}
	}
	private static boolean goGame() {
			r(2);
			r(2);
			if(check()) {
				return true;
			} else{
				l(2);
				l(2);
			}
			
			r(3);
			r(3);
			if(check()) {
				return true;
			} else {
				l(3);
				l(3);
			}
			l(2);
			l(2);
			if(check()) {
				return true;
			} else {
				r(2);
				r(2);
			}
			l(3);
			l(3);
			if(check()) {
				return true;
			} else{
				r(3);
				r(3);
			}
			t(2);
			t(2);
			print();
			if(check()) {
				return true;
			} else {
				b(2);
				print();
				b(2);
				print();
			}
			t(3);
			t(3);
			if(check()) {
				return true;
			} else {
				b(3);
				b(3);
			}
			b(2);
			b(2);
			if(check()) {
				return true;
			} else {
				t(2);
				t(2);
			}
			b(3);
			b(3);
			if(check()) {
				return true;
			} else {
				t(3);
				t(3);
			}
		
		return false;
	}

	private static void b(int idx) {
		int temp = map[h - 1][idx];
		for (int i = h - 1; i > 0; i--) {
			int val = map[i - 1][idx];
			System.out.println(val);
			map[i][idx] = val;
		}
		map[idx][0] = temp;
	}
	private static void t(int idx) {
		int temp = map[0][idx];
		for (int i = 0; i < h - 1; i++) {
			map[i][idx] = map[i + 1][idx];
		}
		map[h - 1][idx] = temp;
	}
	private static void l(int idx) {
		int temp = map[idx][0];
		for (int i = 0; i < w - 1; i++) {
			map[idx][i] = map[idx][i + 1];
		}
		map[idx][w - 1] = temp;
	}
	private static void r(int idx) {
		int temp = map[idx][w - 1];
		for (int i = w - 1; i > 0; i--) {
			map[idx][i] = map[idx][i - 1];
		}
		map[idx][0] = temp;
	}
	private static boolean check() {
		if(map[0][2] != map[0][3] || map[0][2] != map[1][2] || map[0][2] != map[1][3]) {
			return false;
		}
		if(map[2][0] != map[2][1] || map[2][0] != map[3][0] || map[2][0] != map[3][1]) {
			return false;
		}
		if(map[2][2] != map[2][3] || map[2][2] != map[3][2] || map[2][2] != map[3][3]) {
			return false;
		}
		if(map[2][4] != map[2][5] || map[2][4] != map[3][4] || map[2][4] != map[3][5]) {
			return false;
		}
		if(map[2][6] != map[2][7] || map[2][6] != map[3][6] || map[2][6] != map[3][7]) {
			return false;
		}
		if(map[4][2] != map[4][3] || map[4][2] != map[5][2] || map[4][2] != map[5][3]) {
			return false;
		}
		return true;
		
	}
	private static void print() {
		System.out.println();
		for (int i = 0; i < 6; i++) {
			for (int j = 0; j < 8; j++) {
				System.out.print(map[i][j]+" ");
			}
			System.out.println();
		}
	}
}
