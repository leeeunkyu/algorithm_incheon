package algorithm;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Deque;
import java.util.LinkedList;
import java.util.Queue;

public class Solution_4013 {
	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));	
		StringBuilder sb = new StringBuilder();
		
		int testCase = Integer.parseInt(br.readLine());
		
		for (int i = 0; i < testCase; i++) {
			Queue<Integer> q = new LinkedList<Integer>();
			Gear gear[] = new Gear[4];
			
			int k = Integer.parseInt(br.readLine());
			
			for (int j = 0; j < gear.length; j++) {
				String str[] = br.readLine().split(" ");
				Deque<Integer> dq = new LinkedList<Integer>();
				for (int l = 0; l < str.length; l++) {
					dq.add(Integer.parseInt(str[l]));
				}	
				gear[j] = new Gear(dq);
			}
			
			for (int j = 0; j < k; j++) {
				
			}
		}
	}
}

class Gear {
	//8개 날
	//시계방향으로 돌릴경우 맨 뒤에께 맨 앞으로
	//반시계방향으로 돌릴경우 앞에게 맨 뒤로
	Deque<Integer> dq;

	public Gear(Deque<Integer> dq) {
		super();
		this.dq = dq;
	}

	public Deque<Integer> getDq() {
		return dq;
	}

	public void setDq(Deque<Integer> dq) {
		this.dq = dq;
	}
}
