import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main_17136 {
	
	static int n = 10;
	static int res = 0;
	static int[][] arr;
	static int[] nums = {0, 5, 5, 5, 5, 5};
	static boolean[][] visited;
	static int drawNum = 0;
	static int totalNum = 0;
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		arr = new int[n][n];
		visited = new boolean[n][n];
		for (int i = 0; i < n; i++) {
			String[] str = br.readLine().split(" ");
			for (int j = 0; j < n; j++) {
				int val = Integer.parseInt(str[j]);
				arr[i][j] = val;
				if(val == 1)
					++totalNum;
			}
		}
		
		for (int i = 5; i >= 1; i--) {
			go(i);
		}
		if(drawNum != totalNum)
			System.out.println(-1);
		else
			System.out.println(res);
	}
	private static void go(int val) {
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < n; j++) {
				if(arr[i][j] == 1 && !visited[i][j] && check(i, j, val)
						&& nums[val] > 0) {
					draw(i, j, val);
					++res;
					nums[val] -= 1;
				}
			}
		}
	}

	private static void draw(int y, int x, int idx) {
		for (int i = y; i < y + idx; i++) {
			for (int j = x; j < x + idx; j++) {
				visited[i][j] = true;
				++drawNum;
			}
		}
	}

	private static boolean check(int y, int x, int idx) {
		//idx 1, 2, 3....5
		if(y + idx - 1 < n && x + idx - 1 < n &&
				arr[y][x + idx - 1] == 1 && arr[y + idx - 1][x] == 1 && arr[y + idx - 1][x] == 1
				&& !visited[y][x + idx - 1] && !visited[y + idx - 1][x] && !visited[y + idx - 1][x + idx - 1]) {
			for (int i = y; i < y + idx; i++) {
				for (int j = x; j < x + idx; j++) {
					if(i < 0 || i >= n || j < 0 || j >= n || 
							visited[i][j] || arr[i][j] != 1) {
						return false;
					}
				}
			}
		} else {
			return false;
		}
		return true;
	}
}
