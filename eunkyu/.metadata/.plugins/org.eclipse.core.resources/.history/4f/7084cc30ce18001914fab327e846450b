package algorithm;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;

public class Main_15683 {
	// 1은 한방향
	// 2는 양방향
	// 3은 90도
	// 4는 세방향
	// 5는 네방향
	static int N; 	//세로크기
	static int M;	//가로크기
	static int arr[][];
	static int visited[][];
	static ArrayList<Cctv> cctyList = new ArrayList<>();
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		String str[] = br.readLine().split(" ");
		int N = Integer.parseInt(str[0]);
		int M = Integer.parseInt(str[1]);
		arr = new int[N][M];
		visited = new int[N][M];
		for (int i = 0; i < N; i++) {
			String tempStr[] = br.readLine().split(" ");
			for (int j = 0; j < tempStr.length; j++) {
				arr[i][j] = Integer.parseInt(tempStr[j]);
				if(arr[i][j] != 0 && arr[i][j] != 6) {
					cctyList.add(new Cctv(j, i, arr[i][j]));
				}
					
			}
		}
		
		for (int i = 0; i < arr.length; i++) {
			for (int j = 0; j < arr[i].length; j++) {
				System.out.print(arr[i][j]);
			}
			System.out.println();
		}
		dfs(0);
		
	}
	private static void dfs(int i) {
		
		
		if(i >= cctyList.size())
			return;
		Cctv cctv = cctyList.get(i);
		
		int x = cctv.getX();
		int y = cctv.getY();
		int type = cctv.getType();
		visited[y][x] = -1;
		
		if(type == 1) {
			for (int j = 0; j < 4; j++) {
				int dx[] = {0,0,1,-1};
				int dy[] = {1,-1,0,0};
				int nextX = x + dx[j];
				int nextY = y + dy[j];
				
				while(nextX >=  0 && nextX < M && nextY >= 0 && nextY < N && arr[nextY][nextX] != 6) {
					visited[nextY][nextX] = -1;
					nextX += dx[j];
					nextY += dy[j];
				}
				
				dfs(++i);
				
			}
		}else if(type == 2) {
			// ㅡ, ㅣ
			for (int j = 0; j < 2; j++) {
				int dx[] = {0,1};
				int dy[] = {1,0};
				int nextX1 = x + dx[j];
				int nextY1 = y + dy[j];
				int nextX2 = x - dx[j];
				int nextY2 = y - dy[j];
				while(nextX1 >=  0 && nextX1 < M && nextX2 >=  0 && nextX2 < M &&
						nextY1 >= 0 && nextY1 < N && nextY2 >= 0 && nextY2 < N && 
						arr[nextY1][nextX1] != 6 && arr[nextY2][nextX2] != 6) {
					visited[nextY1][nextX1] = -1;
					visited[nextY2][nextX2] = -1;
					nextX1 += dx[j];
					nextY1 += dy[j];
					nextX2 -= dx[j];
					nextY2 -= dx[j];
				}				
				dfs(++i);
			}
			
		}else if(type == 3) {
			//90도 ㄴ, ┌, ㄱ, ┘
			for (int j = 0; j < 2; j++) {
				int dx[] = {1, 1, -1, -1};
				int dy[] = {-1, 1, 1, -1};
				int nextX1 = x + dx[j];
				int nextY1 = y + dy[j];
				while(nextX1 >=  0 && nextX1 < M && nextY1 >= 0 && nextY1 < N && arr[nextY1][nextX1] != 6 ) {
					visited[nextY1][nextX1] = -1;
					nextX1 += dx[j];
					nextY1 += dy[j];

				}				
				dfs(++i);
			}
			
		}else if(type == 4) {
			//ㅗ, ㅏ, ㅜ, ㅓ
			for (int j = 0; j < 4; j++) {
				int dx[] = {1, 1, 1, -1};
				int dy[] = {-1, 1, 1, 1};
				int nextX1 = x + dx[j];
				int nextY1 = y + dy[j];
				int nextX2 = x + dx[j];
				int nextY2 = y + dy[j];
				
				while(nextX1 >=  0 && nextX1 < M && nextY1 >= 0 && nextY1 < N
						&& nextX2 >=  0 && nextX2 < M && nextY2 >= 0 && nextY2 < N
						&& arr[nextY1][nextX1] != 6 && arr[nextY2][nextX2] != 6 ) {
					visited[nextY1][nextX1] = -1;
					visited[nextY2][nextX2] = -1;

					nextX1 += dx[j];
					nextY1 += dy[j];
					
					if(j == 0 && j == 2)
						nextX2 -= dx[j];
					if(j == 1 && j == 3)
						nextY2 -= dy[j];
					
				}
				dfs(++i);
			}
			
		}else if(type == 5) {
			//네방향
			int nextX1 = ++x;
			int nextY1 = ++y;
			int nextX2 = --x;
			int nextY2 = --y;
			
			while(nextX1 >=  0 && nextX1 < M && nextY1 >= 0 && nextY1 < N &&
					nextX2 >=  0 && nextX2 < M && nextY2 >= 0 && nextY2 < N &&
					arr[nextY1][nextX1] != 6 && arr[nextY2][nextX2] != 6 ) {
				visited[nextY1][nextX1] = -1;
				visited[nextY2][nextX2] = -1;
				nextX1 += 1;
				nextY1 += 1;
				nextX1 -= 1;
				nextY1 -= 1;
			}				
			dfs(++i);
			
		}
		
	}

}

class Cctv {
	
	int x;
	int y;
	int type;
	
	public Cctv() {
		super();
	}
	
	public Cctv(int x, int y, int type) {
		super();
		this.x = x;
		this.y = y;
		this.type = type;
	}
	
	public int getX() {
		return x;
	}
	public void setX(int x) {
		this.x = x;
	}
	public int getY() {
		return y;
	}
	public void setY(int y) {
		this.y = y;
	}

	public int getType() {
		return type;
	}

	public void setType(int type) {
		this.type = type;
	}
	
}
